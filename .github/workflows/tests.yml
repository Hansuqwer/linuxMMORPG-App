name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install PyQt6 pyyaml

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Check formatting with black
      run: |
        black --check --diff .

    - name: Type check with mypy
      continue-on-error: true
      run: |
        mypy game_installer.py games_db.py --ignore-missing-imports

    - name: Run tests with pytest
      run: |
        # Run tests without GUI tests (no display in CI)
        xvfb-run pytest -v -m "not gui" --cov=. --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Generate coverage badge
      if: github.ref == 'refs/heads/main'
      run: |
        coverage-badge -o coverage.svg -f

  test-arch:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm python python-pip python-pytest python-pyqt6 python-yaml

    - name: Install test dependencies
      run: |
        pip install pytest-cov pytest-mock pytest-timeout

    - name: Run tests
      run: |
        pytest -v -m "not gui and not requires_aur" --cov=. --cov-report=term

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint black mypy

    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Run pylint
      continue-on-error: true
      run: |
        pylint *.py --disable=C0111,R0913

    - name: Check black formatting
      run: |
        black --check .
